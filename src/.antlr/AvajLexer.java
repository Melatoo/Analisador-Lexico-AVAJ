// Generated from /home/thiago/Documentos/UFLA/compiladores/Analisador-Lexico-AVAJ/src/Avaj.g4 by ANTLR 4.13.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class AvajLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, TYPE=4, STRING=5, ATRIB=6, AP=7, FP=8, AC=9, FC=10, 
		OP=11, OPR=12, IN=13, OUT=14, RET=15, COND=16, WHILE=17, NUM=18, ID=19, 
		WS=20, ERROR=21;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "TYPE", "STRING", "ATRIB", "AP", "FP", "AC", 
			"FC", "OP", "OPR", "IN", "OUT", "RET", "COND", "WHILE", "NUM", "ID", 
			"WS", "ERROR", "CHAR", "DIGIT"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "';'", "','", "'esle'", null, null, "'='", "'('", "')'", "'{'", 
			"'}'", null, null, "'tupni'", "'tnirp'", "'nruter'", null, "'elihw'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, "TYPE", "STRING", "ATRIB", "AP", "FP", "AC", 
			"FC", "OP", "OPR", "IN", "OUT", "RET", "COND", "WHILE", "NUM", "ID", 
			"WS", "ERROR"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public AvajLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Avaj.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u0015\u00b2\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014"+
		"\u0002\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0001\u0000\u0001\u0000"+
		"\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002"+
		"\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003"+
		"\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003"+
		"\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003"+
		"\u0001\u0003\u0003\u0003K\b\u0003\u0001\u0004\u0001\u0004\u0005\u0004"+
		"O\b\u0004\n\u0004\f\u0004R\t\u0004\u0001\u0004\u0001\u0004\u0001\u0005"+
		"\u0001\u0005\u0001\u0006\u0001\u0006\u0001\u0007\u0001\u0007\u0001\b\u0001"+
		"\b\u0001\t\u0001\t\u0001\n\u0001\n\u0001\u000b\u0001\u000b\u0001\u000b"+
		"\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b"+
		"\u0003\u000bk\b\u000b\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f"+
		"\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\u000e\u0001\u000e"+
		"\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000f"+
		"\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f"+
		"\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f"+
		"\u0003\u000f\u008d\b\u000f\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010"+
		"\u0001\u0010\u0001\u0010\u0001\u0011\u0001\u0011\u0001\u0011\u0004\u0011"+
		"\u0098\b\u0011\u000b\u0011\f\u0011\u0099\u0003\u0011\u009c\b\u0011\u0001"+
		"\u0012\u0001\u0012\u0001\u0012\u0005\u0012\u00a1\b\u0012\n\u0012\f\u0012"+
		"\u00a4\t\u0012\u0001\u0013\u0004\u0013\u00a7\b\u0013\u000b\u0013\f\u0013"+
		"\u00a8\u0001\u0013\u0001\u0013\u0001\u0014\u0001\u0014\u0001\u0015\u0001"+
		"\u0015\u0001\u0016\u0001\u0016\u0001P\u0000\u0017\u0001\u0001\u0003\u0002"+
		"\u0005\u0003\u0007\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013"+
		"\n\u0015\u000b\u0017\f\u0019\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011"+
		"#\u0012%\u0013\'\u0014)\u0015+\u0000-\u0000\u0001\u0000\u0005\u0003\u0000"+
		"*+--//\u0002\u0000<<>>\u0003\u0000\t\n\r\r  \u0002\u0000AZaz\u0001\u0000"+
		"09\u00be\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000"+
		"\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001\u0000\u0000"+
		"\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000"+
		"\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0000"+
		"\u0011\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000\u0000"+
		"\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000\u0000"+
		"\u0019\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0000\u0000"+
		"\u001d\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0000\u0000"+
		"!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000%\u0001"+
		"\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000)\u0001\u0000"+
		"\u0000\u0000\u0001/\u0001\u0000\u0000\u0000\u00031\u0001\u0000\u0000\u0000"+
		"\u00053\u0001\u0000\u0000\u0000\u0007J\u0001\u0000\u0000\u0000\tL\u0001"+
		"\u0000\u0000\u0000\u000bU\u0001\u0000\u0000\u0000\rW\u0001\u0000\u0000"+
		"\u0000\u000fY\u0001\u0000\u0000\u0000\u0011[\u0001\u0000\u0000\u0000\u0013"+
		"]\u0001\u0000\u0000\u0000\u0015_\u0001\u0000\u0000\u0000\u0017j\u0001"+
		"\u0000\u0000\u0000\u0019l\u0001\u0000\u0000\u0000\u001br\u0001\u0000\u0000"+
		"\u0000\u001dx\u0001\u0000\u0000\u0000\u001f\u008c\u0001\u0000\u0000\u0000"+
		"!\u008e\u0001\u0000\u0000\u0000#\u0094\u0001\u0000\u0000\u0000%\u009d"+
		"\u0001\u0000\u0000\u0000\'\u00a6\u0001\u0000\u0000\u0000)\u00ac\u0001"+
		"\u0000\u0000\u0000+\u00ae\u0001\u0000\u0000\u0000-\u00b0\u0001\u0000\u0000"+
		"\u0000/0\u0005;\u0000\u00000\u0002\u0001\u0000\u0000\u000012\u0005,\u0000"+
		"\u00002\u0004\u0001\u0000\u0000\u000034\u0005e\u0000\u000045\u0005s\u0000"+
		"\u000056\u0005l\u0000\u000067\u0005e\u0000\u00007\u0006\u0001\u0000\u0000"+
		"\u000089\u0005t\u0000\u00009:\u0005n\u0000\u0000:K\u0005i\u0000\u0000"+
		";<\u0005t\u0000\u0000<=\u0005a\u0000\u0000=>\u0005o\u0000\u0000>?\u0005"+
		"l\u0000\u0000?K\u0005f\u0000\u0000@A\u0005g\u0000\u0000AB\u0005n\u0000"+
		"\u0000BC\u0005i\u0000\u0000CD\u0005r\u0000\u0000DE\u0005t\u0000\u0000"+
		"EK\u0005s\u0000\u0000FG\u0005l\u0000\u0000GH\u0005o\u0000\u0000HI\u0005"+
		"o\u0000\u0000IK\u0005b\u0000\u0000J8\u0001\u0000\u0000\u0000J;\u0001\u0000"+
		"\u0000\u0000J@\u0001\u0000\u0000\u0000JF\u0001\u0000\u0000\u0000K\b\u0001"+
		"\u0000\u0000\u0000LP\u0005\"\u0000\u0000MO\t\u0000\u0000\u0000NM\u0001"+
		"\u0000\u0000\u0000OR\u0001\u0000\u0000\u0000PQ\u0001\u0000\u0000\u0000"+
		"PN\u0001\u0000\u0000\u0000QS\u0001\u0000\u0000\u0000RP\u0001\u0000\u0000"+
		"\u0000ST\u0005\"\u0000\u0000T\n\u0001\u0000\u0000\u0000UV\u0005=\u0000"+
		"\u0000V\f\u0001\u0000\u0000\u0000WX\u0005(\u0000\u0000X\u000e\u0001\u0000"+
		"\u0000\u0000YZ\u0005)\u0000\u0000Z\u0010\u0001\u0000\u0000\u0000[\\\u0005"+
		"{\u0000\u0000\\\u0012\u0001\u0000\u0000\u0000]^\u0005}\u0000\u0000^\u0014"+
		"\u0001\u0000\u0000\u0000_`\u0007\u0000\u0000\u0000`\u0016\u0001\u0000"+
		"\u0000\u0000ab\u0005=\u0000\u0000bk\u0005=\u0000\u0000cd\u0005!\u0000"+
		"\u0000dk\u0005=\u0000\u0000ek\u0007\u0001\u0000\u0000fg\u0005<\u0000\u0000"+
		"gk\u0005=\u0000\u0000hi\u0005>\u0000\u0000ik\u0005=\u0000\u0000ja\u0001"+
		"\u0000\u0000\u0000jc\u0001\u0000\u0000\u0000je\u0001\u0000\u0000\u0000"+
		"jf\u0001\u0000\u0000\u0000jh\u0001\u0000\u0000\u0000k\u0018\u0001\u0000"+
		"\u0000\u0000lm\u0005t\u0000\u0000mn\u0005u\u0000\u0000no\u0005p\u0000"+
		"\u0000op\u0005n\u0000\u0000pq\u0005i\u0000\u0000q\u001a\u0001\u0000\u0000"+
		"\u0000rs\u0005t\u0000\u0000st\u0005n\u0000\u0000tu\u0005i\u0000\u0000"+
		"uv\u0005r\u0000\u0000vw\u0005p\u0000\u0000w\u001c\u0001\u0000\u0000\u0000"+
		"xy\u0005n\u0000\u0000yz\u0005r\u0000\u0000z{\u0005u\u0000\u0000{|\u0005"+
		"t\u0000\u0000|}\u0005e\u0000\u0000}~\u0005r\u0000\u0000~\u001e\u0001\u0000"+
		"\u0000\u0000\u007f\u0080\u0005f\u0000\u0000\u0080\u008d\u0005i\u0000\u0000"+
		"\u0081\u0082\u0005e\u0000\u0000\u0082\u0083\u0005s\u0000\u0000\u0083\u0084"+
		"\u0005l\u0000\u0000\u0084\u008d\u0005e\u0000\u0000\u0085\u0086\u0005e"+
		"\u0000\u0000\u0086\u0087\u0005s\u0000\u0000\u0087\u0088\u0005l\u0000\u0000"+
		"\u0088\u0089\u0005e\u0000\u0000\u0089\u008a\u0005 \u0000\u0000\u008a\u008b"+
		"\u0005f\u0000\u0000\u008b\u008d\u0005i\u0000\u0000\u008c\u007f\u0001\u0000"+
		"\u0000\u0000\u008c\u0081\u0001\u0000\u0000\u0000\u008c\u0085\u0001\u0000"+
		"\u0000\u0000\u008d \u0001\u0000\u0000\u0000\u008e\u008f\u0005e\u0000\u0000"+
		"\u008f\u0090\u0005l\u0000\u0000\u0090\u0091\u0005i\u0000\u0000\u0091\u0092"+
		"\u0005h\u0000\u0000\u0092\u0093\u0005w\u0000\u0000\u0093\"\u0001\u0000"+
		"\u0000\u0000\u0094\u009b\u0003-\u0016\u0000\u0095\u0097\u0005.\u0000\u0000"+
		"\u0096\u0098\u0003-\u0016\u0000\u0097\u0096\u0001\u0000\u0000\u0000\u0098"+
		"\u0099\u0001\u0000\u0000\u0000\u0099\u0097\u0001\u0000\u0000\u0000\u0099"+
		"\u009a\u0001\u0000\u0000\u0000\u009a\u009c\u0001\u0000\u0000\u0000\u009b"+
		"\u0095\u0001\u0000\u0000\u0000\u009b\u009c\u0001\u0000\u0000\u0000\u009c"+
		"$\u0001\u0000\u0000\u0000\u009d\u00a2\u0003+\u0015\u0000\u009e\u00a1\u0003"+
		"+\u0015\u0000\u009f\u00a1\u0003-\u0016\u0000\u00a0\u009e\u0001\u0000\u0000"+
		"\u0000\u00a0\u009f\u0001\u0000\u0000\u0000\u00a1\u00a4\u0001\u0000\u0000"+
		"\u0000\u00a2\u00a0\u0001\u0000\u0000\u0000\u00a2\u00a3\u0001\u0000\u0000"+
		"\u0000\u00a3&\u0001\u0000\u0000\u0000\u00a4\u00a2\u0001\u0000\u0000\u0000"+
		"\u00a5\u00a7\u0007\u0002\u0000\u0000\u00a6\u00a5\u0001\u0000\u0000\u0000"+
		"\u00a7\u00a8\u0001\u0000\u0000\u0000\u00a8\u00a6\u0001\u0000\u0000\u0000"+
		"\u00a8\u00a9\u0001\u0000\u0000\u0000\u00a9\u00aa\u0001\u0000\u0000\u0000"+
		"\u00aa\u00ab\u0006\u0013\u0000\u0000\u00ab(\u0001\u0000\u0000\u0000\u00ac"+
		"\u00ad\t\u0000\u0000\u0000\u00ad*\u0001\u0000\u0000\u0000\u00ae\u00af"+
		"\u0007\u0003\u0000\u0000\u00af,\u0001\u0000\u0000\u0000\u00b0\u00b1\u0007"+
		"\u0004\u0000\u0000\u00b1.\u0001\u0000\u0000\u0000\n\u0000JPj\u008c\u0099"+
		"\u009b\u00a0\u00a2\u00a8\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}